import{_ as a,c as e,o as s,a2 as l}from"./chunks/framework.D30IVGRC.js";const o="/assets/fig-1.SY2GU9zW.png",n="/assets/fig-2.CES0TiAH.png",g=JSON.parse('{"title":"1.2. ターミナルの扱い","description":"","frontmatter":{},"headers":[],"relativePath":"text/chapter-1/terminal.md","filePath":"text/chapter-1/terminal.md"}'),t={name:"text/chapter-1/terminal.md"};function d(c,i,r,p,h,k){return s(),e("div",null,i[0]||(i[0]=[l('<h1 id="_1-2-ターミナルの扱い" tabindex="-1">1.2. ターミナルの扱い <a class="header-anchor" href="#_1-2-ターミナルの扱い" aria-label="Permalink to &quot;1.2. ターミナルの扱い&quot;">​</a></h1><p>まずはターミナルを開いてみよう。黒い画面に白い文字（Mac では白い画面に黒い文字）が出ていて、ここにコマンドを打ち込むことでコンピューターを直接操作することができる。 試しに <code>echo &quot;Hello&quot;</code> と打ち込んで改行すると、<code>Hello</code>が出力される。 <code>echo</code> は、次に与えられた文字列をそのまま出力するコマンドである。</p><p>Windows においては、 WSL のターミナルを用いて Linux を操作することができ、Mac においてはターミナルを用いてコンピューターを操作する事ができる。 Windowsの環境構築で少し出てきた 「PowerShell」は Windows を操作するイメージ。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>echo</code> は「こだま・反響」</p></div><ol><li>「ターミナル」を起動する</li><li><code>echo &quot;Hello&quot;</code> と入力する</li><li><code>Hello</code> という行が表示されていればOK</li></ol><p><img src="https://md.trap.jp/uploads/upload_8550a6882b611e212c99ef7b78187cb6.png" alt=""></p><p>自分の画面とはおそらく違うだろうが、概ねこのような風に <code>Hello</code> が表示されれば問題ない。</p><h2 id="_1-2-1-ディレクトリ" tabindex="-1">1.2.1. ディレクトリ <a class="header-anchor" href="#_1-2-1-ディレクトリ" aria-label="Permalink to &quot;1.2.1. ディレクトリ&quot;">​</a></h2><p>ディレクトリは、エクスプローラー(Windows)/Finder (Mac)で「フォルダ」に相当するものである。ターミナルは常にどこかのディレクトリ上に居るものとして振る舞う。 Finder/エクスプローラーと見比べながら、コマンドを打ち込んで理解しよう。</p><h3 id="ターミナルでの操作" tabindex="-1">ターミナルでの操作 <a class="header-anchor" href="#ターミナルでの操作" aria-label="Permalink to &quot;ターミナルでの操作&quot;">​</a></h3><ol><li>ターミナルを開く</li><li><code>pwd</code> で、現在の自分の場所がわかる</li><li><code>ls</code> で、今居るディレクトリにあるファイル一覧が表示される（最初はほぼないはず！）</li></ol><h4 id="エクスプローラー-windows" tabindex="-1">エクスプローラー（Windows） <a class="header-anchor" href="#エクスプローラー-windows" aria-label="Permalink to &quot;エクスプローラー（Windows）&quot;">​</a></h4><p>エクスプローラーを起動すると、自分のコンピューターに保存されているファイルを一覧することができる。</p><ol><li><p>エクスプローラーの「表示」をタップ <img src="'+o+'" alt=""></p></li><li><p>「ファイル名拡張子」にチェックを入れる</p></li><li><p>サイドバーに「Linux」があるので、それをダブルクリックする。 <img src="'+n+`" alt=""></p></li><li><p>「Ubuntu」をクリック</p></li><li><p><code>pwd</code> コマンドの結果を見ながら、「home」→「（自分の名前）」でアクセスする。</p></li></ol><h4 id="finder-mac" tabindex="-1">Finder （Mac） <a class="header-anchor" href="#finder-mac" aria-label="Permalink to &quot;Finder （Mac）&quot;">​</a></h4><p>Finder を起動すると、自分のコンピューターに保存されているファイルを一覧することができる。</p><ol><li>⌘ + <code>,</code> → 「すべてのファイル名拡張子を表示」をON</li><li>Finder で⌘+Shift+G</li><li><code>pwd</code> で出てきたテキストをそのまま入力</li></ol><h2 id="_1-2-2-作業環境の作成" tabindex="-1">1.2.2. 作業環境の作成 <a class="header-anchor" href="#_1-2-2-作業環境の作成" aria-label="Permalink to &quot;1.2.2. 作業環境の作成&quot;">​</a></h2><h3 id="コマンド紹介" tabindex="-1">コマンド紹介 <a class="header-anchor" href="#コマンド紹介" aria-label="Permalink to &quot;コマンド紹介&quot;">​</a></h3><ul><li><code>pwd</code> : 現在の自分の場所 (<strong>P</strong>rint <strong>W</strong>orking <strong>D</strong>irectory)</li><li><code>ls</code> : 今いるディレクトリにあるファイル (<strong>L</strong>ist <strong>S</strong>egments)</li><li><code>cd　&lt;...&gt;</code> : ディレクトリを移動する (<strong>C</strong>hange <strong>D</strong>irectory)</li><li><code>cd ../</code> 一つ親のディレクトリに移動する (<code>/home/trap</code> なら <code>/home</code> に移動)</li><li><code>mkdir &lt;...&gt;</code> : ディレクトリを作成する (<strong>M</strong>a<strong>k</strong>e <strong>Dir</strong>ectory)</li></ul><h3 id="作業環境の作成" tabindex="-1">作業環境の作成 <a class="header-anchor" href="#作業環境の作成" aria-label="Permalink to &quot;作業環境の作成&quot;">​</a></h3><ol><li><code>cd ~</code> と入力（ <code>~</code> は 0 の2つ右のキー <code>^</code> と Shift 同時押し）；最初の場所に戻る</li><li><code>mkdir pgbasic</code> と入力； <code>pgbasic</code> というディレクトリを作成する</li><li><code>cd pgbasic</code>； <code>pgbasic</code> に移動する</li><li><code>pwd</code>； 今いるディレクトリの場所を出力する</li></ol><h3 id="作業環境を開く方法" tabindex="-1">作業環境を開く方法 <a class="header-anchor" href="#作業環境を開く方法" aria-label="Permalink to &quot;作業環境を開く方法&quot;">​</a></h3><ol><li><code>cd pgbasic</code>； <code>pgbasic</code> に移動する</li><li><code>code main.cpp</code>； VSCode を開く。ここが講習中の作業場所。</li></ol><p>もしくは、VSCode を直接起動しても前回のファイル・ディレクトリを開けるようになる。</p><h2 id="_1-2-3-はじめてのプログラミング" tabindex="-1">1.2.3. はじめてのプログラミング <a class="header-anchor" href="#_1-2-3-はじめてのプログラミング" aria-label="Permalink to &quot;1.2.3. はじめてのプログラミング&quot;">​</a></h2><ul><li>VSCode を開く (<code>code main.cpp</code> コマンドで開く)</li></ul><div class="language-cpp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;iostream&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> namespace</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    cout </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Hello, traP!&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> endl;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Hello, traP! を出力する</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li>保存して、VSCode 上で 「Run Code」で実行できる。</li><li><code>Hello, traP!</code> となっている部分を書き換えると出力が変わる。実際に試してみよう。</li></ul><div class="tip custom-block"><p class="custom-block-title">I 章のまとめ</p><ul><li>プログラミングとは、「コンピューターにどのような動作をさせるかを指示する行為」</li><li>プログラムは、コンパイルして実行される</li><li>Windows, Mac, そして Linux という OS がある</li><li>ディレクトリという概念が存在する</li></ul></div><p>ここまで読んだら、練習問題を解いてみましょう！</p>`,31)]))}const m=a(t,[["render",d]]);export{g as __pageData,m as default};
