import{_ as a,c as i,o as t,a2 as e}from"./chunks/framework.D30IVGRC.js";const k=JSON.parse('{"title":"3-A1. Echo","description":"","frontmatter":{},"headers":[],"relativePath":"text/chapter-3/practice/echo.md","filePath":"text/chapter-3/practice/echo.md"}'),n={name:"text/chapter-3/practice/echo.md"};function p(l,s,h,c,d,o){return t(),i("div",null,s[0]||(s[0]=[e(`<h1 id="_3-a1-echo" tabindex="-1">3-A1. Echo <a class="header-anchor" href="#_3-a1-echo" aria-label="Permalink to &quot;3-A1. Echo&quot;">​</a></h1><p>入力から単語を１つ受け取り、それを出力しよう。</p><h3 id="入力-出力例" tabindex="-1">入力/出力例 <a class="header-anchor" href="#入力-出力例" aria-label="Permalink to &quot;入力/出力例&quot;">​</a></h3><details class="details custom-block"><summary>例1</summary><p><strong>入力</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Hello!</span></span></code></pre></div><p><strong>出力</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Hello!</span></span></code></pre></div></details><h3 id="ヒント" tabindex="-1">ヒント <a class="header-anchor" href="#ヒント" aria-label="Permalink to &quot;ヒント&quot;">​</a></h3><details class="details custom-block"><summary>ヒント1</summary><p>文字列型の変数を使うには、</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">string s;</span></span></code></pre></div></details><details class="details custom-block"><summary>ヒント2</summary><p>もしもこんなエラーが出たとしたら、</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>./Main.cpp:4:5: error: unknown type name &#39;string&#39;; did you mean &#39;std::string&#39;?</span></span>
<span class="line"><span>    string s;</span></span>
<span class="line"><span>    ^~~~~~</span></span>
<span class="line"><span>    std::string</span></span></code></pre></div><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> namespace</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>で、<code>std::</code>を省略できるようにしよう。</p></details><details class="details custom-block"><summary>ヒント3</summary><p>入力を受け取るには<code>cin</code>を、出力するには<code>cout</code>を使おう。</p></details><h3 id="解答例" tabindex="-1">解答例 <a class="header-anchor" href="#解答例" aria-label="Permalink to &quot;解答例&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">解答例1</p><details><summary>クリックして展開</summary><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;iostream&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> namespace</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    string s;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    cin </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> s;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    cout </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> s;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></details></div>`,10)]))}const g=a(n,[["render",p]]);export{k as __pageData,g as default};
