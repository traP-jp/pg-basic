import{_ as n,C as t,c as l,o as a,a2 as p,b as h,w as i,a as r,G as k,a3 as d}from"./chunks/framework.D30IVGRC.js";const y=JSON.parse('{"title":"4.2. while","description":"","frontmatter":{},"headers":[],"relativePath":"text/chapter-4/while.md","filePath":"text/chapter-4/while.md"}'),c={name:"text/chapter-4/while.md"};function o(E,s,g,m,u,_){const e=t("Mermaid");return a(),l("div",null,[s[1]||(s[1]=p(`<h1 id="_4-2-while" tabindex="-1">4.2. while <a class="header-anchor" href="#_4-2-while" aria-label="Permalink to &quot;4.2. while&quot;">​</a></h1><div class="language-cpp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">while</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  cout </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> endl;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>while文は、 <code>while</code> の中の条件文が真の間実行される繰り返し処理。</p><p>上記のコードだと、 10,9,8,7,6,5,4,3,2,1 と順に出力される。</p>`,4)),(a(),h(d,null,{default:i(()=>[k(e,{id:"mermaid-10",class:"mermaid",graph:"flowchart%20LR%0A%20%20%20%20start%5BStart%5D%20--%3E%20init%5B%5Bint%20a%20%3D%2010%5D%5D%0A%20%20%20%20init%20--%3E%20cond%5B%5Ba%3E0%5D%5D%0A%20%20%20%20subgraph%20while%0A%20%20%20%20%20%20cond%20--%3E%20%7CYes%7C%20work%5B%5Bcout%20%3C%3C%20a%5D%5D%20--%3E%20cont%5B%5Ba--%5D%5D%20--%3E%20cond%0A%20%20%20%20%20%20end%0A%20%20%20%20cond%20--%3E%20%7CNo%7C%20e%5B%22End%22%5D%0A"})]),fallback:i(()=>s[0]||(s[0]=[r(" Loading... ")])),_:1}))])}const D=n(c,[["render",o]]);export{y as __pageData,D as default};
