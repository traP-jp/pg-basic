import{_ as a,c as i,o as n,a2 as e}from"./chunks/framework.D30IVGRC.js";const k=JSON.parse('{"title":"2-B1. はじめてのプログラミング nano 編","description":"","frontmatter":{},"headers":[],"relativePath":"text/chapter-1/practice/nano-test.md","filePath":"text/chapter-1/practice/nano-test.md"}'),t={name:"text/chapter-1/practice/nano-test.md"};function l(p,s,c,o,d,r){return n(),i("div",null,s[0]||(s[0]=[e(`<h1 id="_2-b1-はじめてのプログラミング-nano-編" tabindex="-1">2-B1. はじめてのプログラミング nano 編 <a class="header-anchor" href="#_2-b1-はじめてのプログラミング-nano-編" aria-label="Permalink to &quot;2-B1. はじめてのプログラミング nano 編&quot;">​</a></h1><p>さきほどの操作はすべてターミナル上で完結させることもできる。ここでは少しだけそれを試してみよう。</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>ここで紹介するのは「できる」というだけでの紹介で、本講習中では VSCode を使うことを強くおすすめします！</p></div><ol><li>「作業環境を開く方法」まで一緒</li><li><code>nano nano-test.cpp</code> でコードを開く</li><li>キーを入力すると色々入力できる。</li><li>ソースコードを入力する。</li><li><code>Ctrl + X</code>で終了</li><li><code>y</code>を入力したあと、<code>Enter</code>を押すと保存</li><li><code>ls</code>コマンドで<code>nano-test.cpp</code>があることを確認</li><li>ターミナル上で、<code>clang++ nano-test.cpp</code> で「コンパイル」</li><li>エラーが出なかったら、 <code>./a.out</code> で「実行」</li><li>できた！</li></ol><p>この方法で、次のソースコードからなる <code>nano-test.cpp</code> を作成してみよう。</p><div class="language-cpp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;iostream&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> namespace</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    cout </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Hello, nano!&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> endl;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>わからなかったり、詰まったりしたらすぐに TA を呼びましょう！</p></div>`,7)]))}const u=a(t,[["render",l]]);export{k as __pageData,u as default};
