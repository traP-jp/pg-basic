import{_ as t,c as e,o as s,a2 as p}from"./chunks/framework.D30IVGRC.js";const u=JSON.parse(`{"title":"プログラミング環境構築 Mac","description":"","frontmatter":{"title":"プログラミング環境構築 Mac","prev":{"link":"/text/chapter-0/","text":"0. はじめに"},"next":{"link":"/text/chapter-0/guidance","text":"講習会ガイダンス'"}},"headers":[],"relativePath":"text/chapter-0/enviroment/mac.md","filePath":"text/chapter-0/enviroment/mac.md"}`),i={name:"text/chapter-0/enviroment/mac.md"};function l(o,a,d,c,n,r){return s(),e("div",null,a[0]||(a[0]=[p(`<h1 id="環境構築-mac" tabindex="-1">環境構築 Mac <a class="header-anchor" href="#環境構築-mac" aria-label="Permalink to &quot;環境構築 Mac&quot;">​</a></h1><h2 id="step-1-clang-install" tabindex="-1">Step 1: Clang Install <a class="header-anchor" href="#step-1-clang-install" aria-label="Permalink to &quot;Step 1: Clang Install&quot;">​</a></h2><ol><li><p>「⌘ + スペース」</p></li><li><p>「Spotlight　を検索」が表示される <img src="https://md.trap.jp/uploads/upload_adc9c2a774516259a1da6fe5b39d8644.png" alt=""></p></li><li><p><strong>ターミナル</strong> と入力</p></li><li><p>ターミナルを起動する。</p></li><li><p><code>clang --version</code> と入力</p></li></ol><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>なにかインストールを求められた時は、指示に従ってインストールしてください。心配なら TA を呼んでください。</p></div><ol start="6"><li><p><code>command not found</code> と表示されなければOK <img src="https://md.trap.jp/uploads/upload_3ba7721f3d474e631fa3d24018524aff.png" alt=""></p></li><li><p>traQ の tasks チャンネルで :cpp: スタンプをつける</p></li></ol><h2 id="step-2-install-vscode" tabindex="-1">Step 2: Install VSCode <a class="header-anchor" href="#step-2-install-vscode" aria-label="Permalink to &quot;Step 2: Install VSCode&quot;">​</a></h2><ol><li><p><a href="https://code.visualstudio.com/download" target="_blank" rel="noreferrer">https://code.visualstudio.com/download</a> でダウンロード</p></li><li><p><code>⌘+Shift+P</code> を同時押しして、出てきた画面に <code>shell command</code> と入力する。 <code>Install &#39;code&#39; command in PATH</code> を選択。</p></li></ol><p><img src="https://md.trap.jp/uploads/upload_2abb6541a6553eba592d6ebb50d48f42.png" alt=""></p><ol start="3"><li><p>ターミナルで <code>code hello.txt</code> を入力し、VSCode が起動できたら成功！ <img src="https://md.trap.jp/uploads/upload_4fedaae551ed06599c053eab0df1961a.png" alt=""><img src="https://md.trap.jp/uploads/upload_b0f12162818c84b840635422dcb0b2e5.png" alt=""></p></li><li><p><code>⌘+,</code> を押して、出てきた画面に「Auto Save」と入力</p></li><li><p>「Files: Auto Save」の項目を探して、「afterDelay」に変更する <img src="https://md.trap.jp/uploads/upload_8a51ad57ec7b6d396cb610c9bbb17040.png" alt=""></p></li><li><p><code>⌘+Shift+X</code> を押して、出てきた画面に <code>Japanese</code> と入力。 <code>Japanese Language Pack for Visual Studio Code</code> をインストールする。インストール完了後、右下の <code>Change Language and Restart</code> を押して VSCode を再起動する。 <img src="https://md.trap.jp/uploads/upload_6c5cfaf6aadcc679382c966d4bccb753.png" alt=""></p></li><li><p>日本語でVSCode が表示されるようになったら :vscode: スタンプをつける</p></li></ol><h2 id="step-3-拡張機能の設定" tabindex="-1">Step 3: 拡張機能の設定 <a class="header-anchor" href="#step-3-拡張機能の設定" aria-label="Permalink to &quot;Step 3: 拡張機能の設定&quot;">​</a></h2><ol><li><p>VSCodeの 画面で <code>⌘</code> + <code>Shift</code> + <code>X</code></p></li><li><p>「C++」と入力し、「C/C++ Extenstion」の拡張機能を追加</p></li><li><p><code>Code Runner</code> と入力して、「Code Runner」拡張機能を追加</p></li><li><p><code>⌘</code> + <code>,</code> で設定を開く。下記画像の赤丸で囲んだ部分を押して <code>settings.json</code> を開く。 <img src="https://md.trap.jp/uploads/upload_bbdd65cb92c5c57bb38f797676aaea8f.png" alt=""></p></li><li><p>もし<code>&quot;cpp&quot;: </code>で始まる行がなければ、一番最後の行の1つ前の行（ <code>}</code> の前！）に次のコードを追加する。その前の行に <code>,</code> がなかったら追加する。</p></li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&quot;code-runner.executorMap&quot;: {</span></span>
<span class="line"><span>    &quot;cpp&quot;: &quot;cd $dir &amp;&amp; clang++ -std=c++17 $fileName -o $fileNameWithoutExt &amp;&amp; $dir$fileNameWithoutExt&quot;,</span></span>
<span class="line"><span>},</span></span></code></pre></div><p><img src="https://md.trap.jp/uploads/upload_6123c7ce669910790a06b98cc664b827.png" alt=""></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>もしすでに<code>&quot;cpp&quot;: </code> で始まる行があった場合、以下のように<code>g++</code> を <code>clang++</code> に置き換える。</p><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">- &quot;cpp&quot;: &quot;cd $dir &amp;&amp; g++ $fileName -o $fileNameWithoutExt &amp;&amp; $dir$fileNameWithoutExt&quot;,</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+ &quot;cpp&quot;: &quot;cd $dir &amp;&amp; clang++ -std=c++17 $fileName -o $fileNameWithoutExt &amp;&amp; $dir$fileNameWithoutExt&quot;,</span></span></code></pre></div></div><ol start="6"><li><p><code>&quot;code-runner.executorMap&quot;: {</code> の行の前に <code>&quot;code-runner.runInTerminal&quot;: true,</code> を書く（コピペ推奨！！）</p></li><li><p>こんな感じになっていれば OK <img src="https://md.trap.jp/uploads/upload_1444ef8d082128cc2723db31555f3960.png" alt=""></p></li><li><p>ターミナル を開き、 <code>code main.cpp</code> と入力する</p></li><li><p>次のように書く（コピペでも OK ）</p></li></ol><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;iostream&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> namespace</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    cout </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Hello, World!&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> endl;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ol start="10"><li>画像の赤丸で実行してみる。下側の画面に <code>Hello, World!</code> が出れば成功！ <img src="https://md.trap.jp/uploads/upload_750a50362d2ae00ffcf2f4b041446ed9.png" alt=""></li></ol><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>なにか出てきた場合は、代わりに三角の隣の<code>v</code> を押して、「Run Code」を押す！</p><p><img src="https://md.trap.jp/uploads/upload_2b042cfaa37207457e419a5380ccd466.png" alt=""></p></div><ol start="11"><li><p>traQ の tasks チャンネルで :done: を押す</p></li><li><p>環境構築はこれで完了です！お疲れ様でした。 :blob_pyon:</p></li></ol>`,19)]))}const m=t(i,[["render",l]]);export{u as __pageData,m as default};
