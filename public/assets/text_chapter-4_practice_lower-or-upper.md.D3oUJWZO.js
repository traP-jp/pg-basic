import{_ as a,c as i,o as t,a2 as e}from"./chunks/framework.D30IVGRC.js";const k=JSON.parse('{"title":"4-A3. lower or UPPER","description":"","frontmatter":{},"headers":[],"relativePath":"text/chapter-4/practice/lower-or-upper.md","filePath":"text/chapter-4/practice/lower-or-upper.md"}'),n={name:"text/chapter-4/practice/lower-or-upper.md"};function l(p,s,h,r,o,d){return t(),i("div",null,s[0]||(s[0]=[e(`<h1 id="_4-a3-lower-or-upper" tabindex="-1">4-A3. lower or UPPER <a class="header-anchor" href="#_4-a3-lower-or-upper" aria-label="Permalink to &quot;4-A3. lower or UPPER&quot;">​</a></h1><p>アルファベット1文字が渡されたとき、それが大文字なら&quot;UPPERCASE&quot;、小文字なら&quot;lowercase&quot;と出力しよう。</p><h3 id="入力-出力例" tabindex="-1">入力/出力例 <a class="header-anchor" href="#入力-出力例" aria-label="Permalink to &quot;入力/出力例&quot;">​</a></h3><details class="details custom-block"><summary>例1</summary><p><strong>入力</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>a</span></span></code></pre></div><p><strong>出力</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>lowercase</span></span></code></pre></div></details><details class="details custom-block"><summary>例2</summary><p><strong>入力</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>B</span></span></code></pre></div><p><strong>出力</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>UPPERCASE</span></span></code></pre></div></details><h3 id="ヒント" tabindex="-1">ヒント <a class="header-anchor" href="#ヒント" aria-label="Permalink to &quot;ヒント&quot;">​</a></h3><details class="details custom-block"><summary>ヒント1</summary><p><code>char</code>型は1byteの整数値のため、互いに大小関係があります。ASCIIコードの話を思い出してみましょう。</p></details><h3 id="解答例" tabindex="-1">解答例 <a class="header-anchor" href="#解答例" aria-label="Permalink to &quot;解答例&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">解答例1</p><details><summary>クリックして展開</summary><p><code>char</code>型は各文字コードに対応する整数値のため、<code>&lt;</code>、<code>&gt;</code>、<code>&lt;=</code>、<code>&gt;=</code>などで大小を比較することができます。</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;iostream&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> namespace</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    char</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> c;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    cin </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> c;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (c </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;a&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        cout </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;lowercase&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> endl;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        cout </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;UPPERCASE&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> endl;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></details></div>`,9)]))}const g=a(n,[["render",l]]);export{k as __pageData,g as default};
